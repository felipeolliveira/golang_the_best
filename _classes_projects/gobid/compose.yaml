services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - ${GOBID_APP_PORT:-8080}:${GOBID_APP_PORT:-8080}
    environment:
      - GOBID_APP_PORT=${GOBID_APP_PORT:-8080}
      - GOBID_CORS=${GOBID_CORS}
      - GOBID_CSRF_KEY=${GOBID_CSRF_KEY}
      - GOBID_CSRF_SECURE=${GOBID_CSRF_SECURE}
      - GOBID_DATABASE_HOST=${GOBID_DATABASE_HOST}
      - GOBID_DATABASE_PORT=${GOBID_DATABASE_PORT}
      - GOBID_DATABASE_NAME=${GOBID_DATABASE_NAME}
      - GOBID_DATABASE_USER=${GOBID_DATABASE_USER}
      - GOBID_DATABASE_PASSWORD=${GOBID_DATABASE_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - local-net
    profiles: [production]

  db:
    image: postgres:latest
    restart: unless-stopped
    ports:
      - ${GOBID_DATABASE_PORT:-5432}:5432
    environment:
      POSTGRES_USER: ${GOBID_DATABASE_USER} 
      POSTGRES_PASSWORD: ${GOBID_DATABASE_PASSWORD} 
      POSTGRES_DB: ${GOBID_DATABASE_NAME}
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - local-net
    profiles: [production]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${GOBID_DATABASE_USER} -d ${GOBID_DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    ports:
      - 54321:80
    environment:
      PGADMIN_DEFAULT_EMAIL: local@local.com
      PGADMIN_DEFAULT_PASSWORD: local
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - local-net
    profiles: [development]

volumes:
  db:
    driver: local
  pgadmin:
    driver: local

networks:
  local-net:
